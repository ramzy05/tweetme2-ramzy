{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP USER\\\\Documents\\\\R\\\\PROJECTS\\\\Dev\\\\tweetme2\\\\tweetme2-web\\\\src\\\\tweets\\\\components.js\",\n    _s = $RefreshSig$();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction loadTweets(callback) {\n  const xhr = new XMLHttpRequest();\n  const method = 'GET'; //POST\n\n  const url = 'http://127.0.0.1:8000/api/tweets/';\n  const responseType = 'json';\n  xhr.responseType = responseType;\n  xhr.open(method, url);\n\n  xhr.onload = function () {\n    callback(xhr.response, xhr.status);\n  };\n\n  xhr.onerror = e => {\n    console.log(e);\n    callback({\n      message: 'This request was an error'\n    }, 400);\n  };\n\n  xhr.send();\n}\n\nexport function TweetsList(props) {\n  _s();\n\n  const [tweets, settweets] = useState([]);\n  useEffect(() => {\n    const myCallback = (response, status) => {\n      if (status === 200) {\n        settweets(response);\n      } else {\n        alert('There was an error');\n      }\n    };\n\n    loadTweets(myCallback);\n  }, []);\n  return tweets.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(Tweet, {\n      tweet: item,\n      className: \"my-5 py-5 border bg-white text-dark\"\n    }, `${index}-${item.id}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 14\n    }, this);\n  });\n}\n\n_s(TweetsList, \"XY6EX3CH+TR9u9eimATZJoPUqnA=\");\n\n_c = TweetsList;\nexport function ActionBtn(props) {\n  const {\n    tweet,\n    action\n  } = props;\n  const className = props.className ? props.className : 'btn btn-primary btn-sm';\n  return action.type === 'like' ? /*#__PURE__*/_jsxDEV(\"button\", {\n    className: className,\n    children: [tweet.likes, \" \", tweet.likes >= 2 ? 'Likes' : 'Like']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 36\n  }, this) : null;\n}\n_c2 = ActionBtn;\nexport function Tweet(props) {\n  const {\n    tweet\n  } = props;\n  const className = props.className ? props.className : 'col-10 mx-auto col-md-6';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [tweet.id, \" - \", tweet.content]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn btn-group\",\n      children: [/*#__PURE__*/_jsxDEV(ActionBtn, {\n        tweet: tweet,\n        action: {\n          type: 'like'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ActionBtn, {\n        tweet: tweet,\n        action: {\n          type: 'unlike'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 12\n  }, this);\n}\n_c3 = Tweet;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TweetsList\");\n$RefreshReg$(_c2, \"ActionBtn\");\n$RefreshReg$(_c3, \"Tweet\");","map":{"version":3,"names":["loadTweets","callback","xhr","XMLHttpRequest","method","url","responseType","open","onload","response","status","onerror","e","console","log","message","send","TweetsList","props","tweets","settweets","useState","useEffect","myCallback","alert","map","item","index","id","ActionBtn","tweet","action","className","type","likes","Tweet","content"],"sources":["C:/Users/HP USER/Documents/R/PROJECTS/Dev/tweetme2/tweetme2-web/src/tweets/components.js"],"sourcesContent":["\r\nfunction loadTweets(callback){\r\n    const xhr = new XMLHttpRequest()\r\n    const method = 'GET'//POST\r\n    const url='http://127.0.0.1:8000/api/tweets/'\r\n    const responseType = 'json'\r\n    xhr.responseType = responseType\r\n    xhr.open(method, url)\r\n    xhr.onload = function() {\r\n        callback(xhr.response, xhr.status)\r\n    }    \r\n    xhr.onerror = (e)=>{\r\n      console.log(e);\r\n      callback({message:'This request was an error'}, 400)\r\n    } \r\n    xhr.send()\r\n  }\r\n  \r\n export function TweetsList(props) {\r\n    const [tweets, settweets] = useState([])\r\n    \r\n    useEffect(() => {\r\n      const myCallback = (response, status) => { \r\n        if(status === 200){\r\n          settweets(response)\r\n        }else{\r\n          alert('There was an error')\r\n        }\r\n      }\r\n      loadTweets(myCallback)\r\n    }, [])\r\n    return tweets.map((item, index) =>{\r\n      return <Tweet tweet={item} className='my-5 py-5 border bg-white text-dark' key={`${index}-${item.id}`}/>\r\n    } )\r\n  }\r\n\r\nexport function ActionBtn(props){\r\n    const {tweet, action} = props\r\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\r\n    return action.type === 'like'? <button className={className}>{tweet.likes} {tweet.likes>=2? 'Likes' : 'Like'}</button> : null\r\n  } \r\n  \r\nexport  function Tweet(props){\r\n    const {tweet} = props\r\n    const className = props.className ? props.className : 'col-10 mx-auto col-md-6'\r\n    return <div className={className}>\r\n        <p>{tweet.id} - {tweet.content}</p>\r\n        <div className='btn btn-group'>\r\n          <ActionBtn tweet={tweet} action={{type:'like'}}/>\r\n          <ActionBtn tweet={tweet} action={{type:'unlike'}}/>\r\n        </div>\r\n    </div>\r\n  }"],"mappings":"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"},"metadata":{},"sourceType":"module"}